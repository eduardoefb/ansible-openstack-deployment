---
# tasks file
# https://docs.openstack.org/install-guide/openstack-services.html
# https://docs.openstack.org/placement/train/install/from-pypi.html
# https://docs.openstack.org/train/install/

  - include_vars: "{{ playbook_dir }}/config.yml"
  - include_vars: "{{ playbook_dir }}/passwords.yml"
  - include_vars: "main.yml"

  - name: Create database and user
    shell: |
      mysql -u root -p{{ ROOT_DBPASS }} -e "DROP DATABASE placement;"
      mysql -u root -p{{ ROOT_DBPASS }} -e "CREATE DATABASE placement;"
      mysql -u root -p{{ ROOT_DBPASS }} -e "GRANT ALL PRIVILEGES ON placement.* TO 'placement'@'localhost' IDENTIFIED BY '{{ PLACEMENT_DBPASS }}';"
      mysql -u root -p{{ ROOT_DBPASS }} -e "GRANT ALL PRIVILEGES ON placement.* TO 'placement'@'%' IDENTIFIED BY '{{ PLACEMENT_DBPASS }}';"


  - name: Create user
    shell: |
      source /root/admin-openrc
      openstack user create --domain default --password {{ PLACEMENT_PASS }} placement     
    args:
      executable: /bin/bash
    
  - name: Add the Placement user to the service project with the admin role
    shell: |
      source /root/admin-openrc
      openstack role add --project service --user placement admin
    args:
      executable: /bin/bash

  - name: Create the Placement API entry in the service catalog
    shell: |
      source /root/admin-openrc
      openstack service create --name placement --description "Placement API" placement
    args:
      executable: /bin/bash
  
  - name: Create the Placement API service endpoints
    shell: |
      source /root/admin-openrc
      openstack endpoint create --region RegionOne placement public https://{{ openstack.controller.name }}:8778
      openstack endpoint create --region RegionOne placement internal https://{{ openstack.controller.name }}:8778
      openstack endpoint create --region RegionOne placement admin https://{{ openstack.controller.name }}:8778
    args:
      executable: /bin/bash

  - name: Uninstalling the packages
    apt:
      name: "{{ packages }}"
      state: absent
    register: apt_res
    retries: 300
    delay: 10
    until: apt_res is success      
    vars:
      packages:
        - placement-api


  - name: Installing the packages
    apt:
      name: "{{ packages }}"
      state: latest
    register: apt_res
    retries: 300
    delay: 10
    until: apt_res is success      
    vars:
      packages:
        - placement-api
  
  - name: Edit the /etc/placement/placement.conf 
    template:
      src: placement.conf.j2
      dest: /etc/placement/placement.conf 
      owner: root 
      group: placement
      mode: '0640'
  
  - name: Populate the placement database
    shell: |
      su -s /bin/sh -c "placement-manage db sync" placement
    args:


  - name: Configure placement-api
    template:
      src: placement-api.conf.j2
      dest: /etc/apache2/sites-available/placement-api.conf
    vars:
      local_port: "{{ item.local_port }}"
      local_ip: "{{ item.local_ip }}"
      remote_port: "{{ item.remote_port }}"
    loop:
      "{{ openstack.services }}"
    when:
      - item.name == "placement"         

  - name: Restart the apache2 service
    systemd:
      name: apache2
      enabled: yes
      state: restarted






    


